"Ignorance and Prejudice" in Software Fairness
A Case Study of Onboarding in Software Teams: Tasks and Strategies
A Context-based Automated Approach for Method Name Consistency Checking and Suggestion
A Differential Testing Approach for Evaluating Abstract Syntax Tree Mapping Algorithms
AID: An Automated Inclusivity-Bug Detector
ATVHunter: Reliable Version Detection of Third-Party Libraries for Vulnerability Identification in Android Apps
AUTOTRAINER: An Automatic DNN Training Problem Detection and Repair System
Abacus: Precise Side-Channel Analysis
An Empirical Analysis of UI-based Flaky Tests
An Empirical Assessment of Global COVID-19 Contact Tracing Applications
An Empirical Study of Refactorings and Technical Debt in Machine Learning Systems
An Empirical Study on Deployment Faults of Deep Learning Based Mobile Applications
An Evolutionary Study of Configuration Design and Implementation in Cloud Systems
App's Auto-Login Function Security Testing via Android OS-Level Virtualization
Are Machine Learning Cloud APIs Used Correctly?
AutoCCAG: An Automated Approach to Constrained Covering Array Generation
Automated Query Reformulation for Efficient Search Based on Query Logs from Stack Overflow
Automatic Extraction of Opinion-based Q&A from Online Developer Chats
Automatic Solution Summarization for Crash Bugs
Automatic Unit Test Generation for Machine Learning Libraries: How Far Are We?
Automatic Web Testing using Curiosity-Driven Reinforcement Learning
Automatically Matching Bug Reports With Related App Reviews
Bounded Exhaustive Search of Alloy Specification Repairs
CENTRIS: A Precise and Scalable Approach for Identifying Modified Open-Source Software Reuse
CHAMP: Characterizing Undesired App Behaviors from User Comments based on Market Policies
CURE: Code-Aware Neural Machine Translation for Automatic Program Repair
Can Program Synthesis be Used to Learn Merge Conflict Resolutions? An Empirical Analysis
Code Prediction by Feeding Trees to Transformers
CodeShovel: Constructing Method-Level Source Code Histories
Containing Malicious Package Updates in npm with a Lightweight Permission System
Data-Driven Synthesis of a Provably Sound Side Channel Analysis
Data-Oriented Differential Testing of Object-Relational Mapping Systems
DeepBackdoor: Black-box Backdoor Attack on Deep Learning Models through Neural Payload Injection
DeepLV: Suggesting Log Levels Using Ordinal Based Neural Networks
DeepLocalize: Fault Localization for Deep Neural Networks
DepOwl: Detecting Dependency Bugs to Prevent Compatibility Failures
Distribution-Aware Testing of Neural Networks Using Generative Models
Do you really code? Designing and Evaluating Screening Questions for Online Surveys with Programmers
Does mutation testing improve testing practices?
Domain-Specific Fixes for Flaky Tests with Wrong Assumptions on Underdetermined Specifications
Don't Do That! Hunting Down Visual Design Smells in Complex UIs against Design Guidelines
Early Life Cycle Software Defect Prediction. Why? How?
Efficient Compiler Autotuning via Bayesian Optimization
Enabling Software Resilience in GPGPU Applications via Partial Thread Protection
Enhancing Genetic Improvement of Software with Regression Test Selection
Evaluating SZZ Implementations Through a Developer-informed Oracle
Evaluating Unit Testing Practices in R Packages
EvoSpex: An Evolutionary Algorithm for Learning Postconditions
Extracting Concise Bug-Fixing Patches from Human-Written Patches in Version Control Systems
Extracting Rationale for Software Development Decisions—A Study of Python Email Archives
FLACK: Counterexample-Guided Fault Localization for Alloy Models
Fast Outage Analysis of Large-scale Production Clouds with Service Correlation Mining
Fast Parametric Model Checking through Model Fragmentation
Fast and Precise On-the-fly Patch Validation for All
Fault Localization with Code Coverage Representation Learning
Fine with ``1234''? An Analysis of SMS One-Time Password Randomness in Android Apps
FlakeFlagger: Predicting Flakiness Without Rerunning Tests
Fuzzing Symbolic Expressions
GUIGAN: Learning to Generate GUI Designs Using Generative Adversarial Networks
GenTree: Using Decision Trees to Learn Interactions for Configurable Software
Graph-based Fuzz Testing for Deep Learning Inference Engines
Growing A Test Corpus with Bonsai Fuzzing
Hero: On the Chaos When PATH Meets Modules
How Developers Optimize Virtual Reality Applications: A Study of Optimization Commits in Open Source Unity Projects
How Gamification Affects Software Developers: Cautionary Evidence from a Natural Experiment on GitHub
How to identify Boundary Conditions with Contrasty Metric?
IMGDroid: Detecting Image Loading Defects in Android Applications
IdBench: Evaluating Semantic Representations of Identifier Names in Source Code
Identifying Key Features from App User Reviews
If It’s Not Secure, It Should Not Compile: Preventing DOM-Based XSS in Large-Scale Web Development with API Hardening
Improving Fault Localization by Integrating Value and Predicate Based Causal Inference Techniques
InferCode: Self-Supervised Learning of Code Representations by Predicting Subtrees
Input Algebras
Interface Compliance of Inline Assembly: Automatically Check, Patch and Refine
Interpretation-enabled Software Reuse Detection Based on a Multi-Level Birthmark Model
IoT Bugs and Development Challenges
It Takes Two to Tango: Combining Visual and Textual Information for Detecting Duplicate Video-Based Bug Reports
JEST: N+1-version Differential Testing of Both JavaScript Engines and Specification
JUSTGen: Effective Test Generation for Unspecified JNI Behaviors on JVMs
Layout and Image Recognition Driving Cross-Platform Automated Mobile Testing
Leaving My Fingerprints: Motivations and Challenges of Contributing to OSS for Social Good
Measuring Discrimination to Boost Comparative Testing for Multiple Deep Learning Models
MuDelta: Delta-Oriented Mutation Testing at Commit Time
On Indirectly Dependent Documentation in the Context of Code Evolution: A Study
On the Naming of Methods: A Survey of Professional Developers
Onboarding vs. Diversity, Productivity and Quality -- Empirical Study of the OpenStack Ecosystem
Operation is the hardest teacher: estimating DNN accuracy looking for mispredictions
Playing Planning Poker in Crowds: Human Computation of Software Effort Estimates
Prioritize Crowdsourced Test Reports via Deep Screenshot Understanding
Prioritizing Test Inputs for Deep Neural Networks via Mutation Analysis
Program Comprehension and Code Complexity Metrics: An fMRI Study
PyART: Python API Recommendation in Real-Time
PyCG: Practical Call Graph Generation in Python
RAICC: Revealing Atypical Inter-Component Communication in Android Apps
Reducing DNN Properties to Enable Falsification with Adversarial Attacks
Relating Reading, Visualization, and Coding for New Programmers: A Neuroimaging Study
Representation of Developer Expertise in Open Source Software
Resource-Guided Configuration Space Reduction for Deep Learning Models
Restoring Execution Environments of Jupyter Notebooks
RobOT: Robustness-Oriented Testing for Deep Learning Systems
SOAR: A Synthesis Approach for Data Science API Refactoring
Same File, Different Changes: The Potential of Meta-Maintenance on GitHub
Scalable Quantitative Verification For Deep Neural Networks
Seamless Variability Management With the Virtual Platform
Self-Checking Deep Neural Networks in Deployment
Semantic Patches for Adaptation of JavaScript Programs to Evolving Libraries
Semantic Web Accessibility Testing via Hierarchical Visual Analysis
Semi-supervised Log-based Anomaly Detection via Probabilistic Label Estimation
Shipwright: A Human-in-the-Loop System for Dockerfile Repair
Siri, Write the Next Method
Smart Contract Security: a Practitioners’ Perspective
Studying Test Annotation Maintenance in the Wild
Studying the Usage of Text-To-Text Transfer Transformer to Support Code-Related Tasks
Supporting Quality Assurance with Automated Process-Centric Quality Constraints Checking
Sustainable Solving: Reducing The Memory Footprint of IFDS-Based Data Flow Analyses Using Intelligent Garbage Collection
Synthesizing Object State Transformers for Dynamic Software Updates
Technical Leverage in a Software Ecosystem: Development Opportunities and Security Risks
Testing Machine Translation via Referential Transparency
The Mind Is a Powerful Place: How Showing Code Comprehensibility Metrics Influences Code Understanding
The Shifting Sands of Motivation: Revisiting What Drives Contributors in Open Source
Too Quiet in the Library: An Empirical Study of Security Updates in Android Apps’ Native Code
Towards Automating Code Review Activities
Trace-Checking CPS Properties: Bridging the Cyber-Physical Gap
Traceability Transformed: Generating more Accurate Links with Pre-Trained BERT Models
TransRegex: Multi-modal Regular Expression Synthesis by Generate-and-Repair
Understanding Bounding Functions in Safety-Critical UAV Software
Unrealizable Cores for Reactive Systems Specifications
Using Domain-specific Corpora for Improved Handling of Ambiguity in Requirements
Verifying Determinism in Sequential Programs
We’ll Fix It in Post: What Do Bug Fixes in Video Game Update Notes Tell Us?
What Makes a Great Maintainer of Open Source Projects?
What helped, and what did not? An Evaluation of the Strategies to Improve Continuous Integration
White-Box Analysis over Machine Learning: Modeling Performance of Configurable Systems
White-Box Performance-Influence Models: A Profiling and Learning Approach
Why Security Defects Go Unnoticed during Code Reviews? A Case-Control Study of the Chromium OS Project
Why don’t Developers Detect Improper Input Validation?'; DROP TABLE Papers; --
“Do this! Do that!, And nothing will happen” Do specifications lead to securely stored passwords?
“How Was Your Weekend?” Software Development Teams Working From Home During COVID-19